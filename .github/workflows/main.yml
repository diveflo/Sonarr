name: buildx

on:
  push:
    branches: phantom-develop
    tags:

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: checkout
        uses: actions/checkout@v2
      -
        name: prepare buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      -
        name: build images
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm,linux/arm64/v8 \
            --output "type=image,push=false" \
            --file ./Dockerfile .
      -
        name: login dockerhub
        if: success() && github.event_name != 'pull_request'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESSTOKEN }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
      -
        name: push images
        if: success() && github.event_name != 'pull_request'
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
      -
        name: check docker manifest
        if: always() && github.event_name != 'pull_request'
        run: |
          docker run --rm mplatform/mquery ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
      -
        name: clear docker config
        if: always() && github.event_name != 'pull_request'
        run: |
          rm -f ${HOME}/.docker/config.json