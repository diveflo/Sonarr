name: CI
on:
  push:
    branches: [phantom-develop]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup msbuild
        uses: microsoft/setup-msbuild@v1.0.0
      - name: setup nuget
        uses: NuGet/setup-nuget@v1.0.2
      - name: nuget restore
        run: nuget restore src\Sonarr.sln
      - name: build
        run: msbuild src\Sonarr.sln /p:Configuration=Release /p:Platform=x86 /t:Build
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: define yarn cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        shell: bash
      - name: cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install
          yarn lint
          yarn stylelint
          yarn run build --production
      - name: prepare artifact upload
        shell: powershell
        run: Rename-Item -Path .\_output\ -NewName Sonarr
      - name: upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: sonarr-hevc-build
          path: Sonarr
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Github tagger
        id: release-tagger
        uses: mosfetlang/dev-tagger-action@v1
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.release-tagger.outputs.newTag}}
          release_name: Release ${{ steps.release-tagger.outputs.newTag }}
      - name: download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: sonarr-hevc-build
          path: ${{runner.temp}}/Sonarr
      - name: prepare release asset
        shell: pwsh
        run: Compress-Archive -Path ${{runner.temp}}/Sonarr -DestinationPath sonarr-hevc.zip
      - name: upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sonarr-hevc.zip
          asset_name: sonarr-hevc.zip
          asset_content_type: application/zip
